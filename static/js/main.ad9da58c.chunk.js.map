{"version":3,"sources":["helpers/helpers.tsx","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","reversed","setReversed","NONE","sortType","setSortType","resetButtonCondition","reorderedGoods","goods","visibleGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","currentOrder","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAKA,E,6EAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SCmBAA,E,OAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAAuBL,GAAYG,IAAaP,EAASM,KACzDI,EDzCD,SACLC,EACAP,EACAG,GAEA,IAAMK,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQR,GACN,KAAKP,EAASgB,SACZ,OAAOF,EAAUG,cAAcF,GACjC,KAAKf,EAASkB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OACvC,QACE,OAAO,MAITf,GACFQ,EAAaQ,UAGRR,ECmBgBS,CAAkBpB,EAAiBG,EAAUG,GAEpE,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYjB,IAAaP,EAASgB,WAGtCS,QA1BoB,WAC1BjB,EAAYR,EAASgB,WAkBjB,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYjB,IAAaP,EAASkB,SAGtCO,QAlCkB,WACxBjB,EAAYR,EAASkB,SA0BjB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,YAAapB,IAGjBqB,QAtDa,WACnBpB,GAAY,SAAAqB,GAAY,OAAKA,MA8CzB,qBAWCjB,GACC,wBACEc,KAAK,SACLD,UAAU,mBACVG,QAlDI,WACZpB,GAAY,GACZG,EAAYR,EAASM,OA6Cf,sBAUJ,6BACE,6BACGI,EAAeiB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,eClGhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ad9da58c.chunk.js","sourcesContent":["enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  reversed: boolean,\n  sortType: SortType,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (reversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { getReorderedGoods } from './helpers/helpers';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [reversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverseGoods = () => {\n    setReversed(currentOrder => !currentOrder);\n  };\n\n  const sortGoodsAlphabetic = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortGoodsByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const resetButtonCondition = reversed || sortType !== SortType.NONE;\n  const reorderedGoods = getReorderedGoods(goodsFromServer, reversed, sortType);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortGoodsAlphabetic}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortGoodsByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning', {\n              'is-light': !reversed,\n            },\n          )}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n        {resetButtonCondition && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedGoods.map(good => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}